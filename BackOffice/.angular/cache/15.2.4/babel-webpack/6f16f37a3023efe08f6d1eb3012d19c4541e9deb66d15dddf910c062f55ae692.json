{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LogsService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getListLogs() {\n    const myApiUrl = 'logs/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteLog(id) {\n    const myApiUrl = 'logs/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateLog(logs) {\n    const myApiUrl = 'logs/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, logs);\n  }\n  getLog(id) {\n    const myApiUrl = 'logs/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateUser(id, logs) {\n    const myApiUrl = 'logs/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, logs);\n  }\n}\nLogsService.ɵfac = function LogsService_Factory(t) {\n  return new (t || LogsService)(i0.ɵɵinject(i1.HttpClient));\n};\nLogsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogsService,\n  factory: LogsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,QAAQ;EAGtC;EAEAC,WAAW;IACT,MAAMC,QAAQ,GAAW,UAAU;IACnC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAS,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EAC7D;EAEAE,SAAS,CAACC,EAAM;IACd,MAAMH,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAEnE;EAEAE,QAAQ,CAACC,IAAU;IACjB,MAAMN,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAO,GAAG,IAAI,CAACV,QAAQ,GAAGG,QAAQ,EAAE,EAAEM,IAAI,CAAC;EAClE;EAEAE,MAAM,CAACL,EAAU;IACf,MAAMH,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAO,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAChE;EAEAM,UAAU,CAACN,EAAU,EAAEG,IAAU;IAC/B,MAAMN,QAAQ,GAAW,OAAO;IAChC,OAAO,IAAI,CAACJ,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACb,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,EAAEG,IAAI,CAAC;EACtE;;AAlCWZ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAiB,SAAXjB,WAAW;EAAAkB,YAFV;AAAM","names":["environment","LogsService","constructor","http","myAppUrl","endpoint","getListLogs","myApiUrl","get","deleteLog","id","delete","crateLog","logs","post","getLog","updateUser","put","factory","providedIn"],"sourceRoot":"","sources":["D:\\EA\\MINIMO 1\\BackOfficeEA\\backOffice\\src\\app\\services\\logs.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport {ID, Logs} from '../interfaces/logs'\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogsService {\r\n  \r\n  private myAppUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.myAppUrl = environment.endpoint;\r\n\r\n    \r\n  }\r\n\r\n  getListLogs(): Observable<Logs[]> {\r\n    const myApiUrl: string = 'logs/all'\r\n    return this.http.get<Logs[]>(`${this.myAppUrl}${myApiUrl}`)\r\n  }\r\n\r\n  deleteLog(id: ID): Observable<void> {\r\n    const myApiUrl: string = 'logs/'\r\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\r\n\r\n  }\r\n\r\n  crateLog(logs: Logs): Observable<Logs> {\r\n    const myApiUrl: string = 'logs/'\r\n    return this.http.post<Logs>(`${this.myAppUrl}${myApiUrl}`, logs);\r\n  }\r\n\r\n  getLog(id: string): Observable<Logs> {\r\n    const myApiUrl: string = 'logs/';\r\n    return this.http.get<Logs>(`${this.myAppUrl}${myApiUrl}${id}`);\r\n  }\r\n\r\n  updateUser(id: string, logs: Logs): Observable<Logs> {\r\n    const myApiUrl: string = 'logs/';\r\n    return this.http.put<Logs>(`${this.myAppUrl}${myApiUrl}${id}`, logs);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}