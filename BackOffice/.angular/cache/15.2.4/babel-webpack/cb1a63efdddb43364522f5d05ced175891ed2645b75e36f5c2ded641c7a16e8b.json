{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/logs.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../shared/progress-bar/progress-bar.component\";\nfunction AddEditLogsComponent_app_progress_bar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\nfunction AddEditLogsComponent_div_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo user es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditLogsComponent_div_1_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo fechaLog es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditLogsComponent_div_1_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo tipoLog es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AddEditLogsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditLogsComponent_div_1_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.addLog());\n    });\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵtemplate(8, AddEditLogsComponent_div_1_span_8_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵtemplate(10, AddEditLogsComponent_div_1_span_10_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(11, \"input\", 10);\n    i0.ɵɵtemplate(12, AddEditLogsComponent_div_1_span_12_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelementStart(13, \"div\", 11)(14, \"div\", 12)(15, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function AddEditLogsComponent_div_1_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.goBack());\n    });\n    i0.ɵɵtext(16, \"Volver\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 12)(18, \"button\", 14);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.operacion, \" log\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formLogs);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.formLogs.get(\"user\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r1.formLogs.get(\"user\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r1.formLogs.get(\"fechaLog\")) == null ? null : tmp_3_0.hasError(\"required\")) && ((tmp_3_0 = ctx_r1.formLogs.get(\"fechaLog\")) == null ? null : tmp_3_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx_r1.formLogs.get(\"tipoLog\")) == null ? null : tmp_4_0.hasError(\"required\")) && ((tmp_4_0 = ctx_r1.formLogs.get(\"tipoLog\")) == null ? null : tmp_4_0.touched));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.formLogs.invalid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.operacion);\n  }\n}\nexport class AddEditLogsComponent {\n  constructor(fb, _logsService, router, toastr, aRouter, _location) {\n    this.fb = fb;\n    this._logsService = _logsService;\n    this.router = router;\n    this.toastr = toastr;\n    this.aRouter = aRouter;\n    this._location = _location;\n    this.loading = false;\n    this.operacion = 'Añadir ';\n    this.formLogs = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      surname: [null, Validators.required],\n      email: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n    this.idLog = aRouter.snapshot.paramMap.get(\"idLog\");\n  }\n  ngOnInit() {\n    if (this.idLog != null) {\n      this.operacion = 'Actualizar ';\n      this.getLog(this.idLog);\n    }\n  }\n  goBack() {\n    this._location.back();\n  }\n  addLog() {\n    const logs = {\n      user: this.formLogs.value.user,\n      fechaLog: this.formLogs.value.fechaLog,\n      tipoLog: this.formLogs.value.tipoLog\n    };\n    this.loading = true;\n    if (this.idLog !== null) {\n      //Es update\n      this._logsService.updateUser(this.idLog, logs).subscribe(() => {\n        this.toastr.info(`El log fue actualizado con exito`, 'Log actualizado');\n        this.loading = false;\n        //if (this.idUser !== null) {\n        //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}\n        //else{\n        //this.router.navigate([`/producto`]);\n        // }\n        this.router.navigate([`/`]);\n      });\n    } else {\n      //Es crear\n      this._logsService.crateLog(logs).subscribe(data => {\n        this.toastr.success(`El log fue agregado con exito`, 'Log agregado');\n        this.loading = false;\n        this.idLog = String(data._id);\n        console.log(data);\n        //Es añadir el usuaio al ticket\n        //if (this.idTicket !== null) {\n        //this._usersService.insertProductoToTicket(this.idTicket,this.idUser).subscribe();\n        //}\n        //if (this.idTicket !== null) {\n        //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\n        //}else{\n        //this.router.navigate([`/producto`]);\n        //}\n        //this.router.navigate([`/`]);\n      });\n    }\n  }\n\n  getLog(id) {\n    this.loading = true;\n    this._logsService.getLog(id).subscribe(data => {\n      this.loading = false;\n      this.formLogs.patchValue({\n        user: data.user,\n        fechaLog: data.fechaLog,\n        tipoLog: data.tipoLog\n      });\n    });\n  }\n}\nAddEditLogsComponent.ɵfac = function AddEditLogsComponent_Factory(t) {\n  return new (t || AddEditLogsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.LogsService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Location));\n};\nAddEditLogsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddEditLogsComponent,\n  selectors: [[\"app-add-edit-logs\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"row mt-1\", 4, \"ngIf\"], [1, \"row\", \"mt-1\"], [1, \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"bg-secondary\", \"mb-3\", 2, \"max-width\", \"25rem\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"user\", \"type\", \"text\", \"placeholder\", \"Ingrese user\", 1, \"form-control\"], [\"formControlName\", \"fechaLog\", \"type\", \"text\", \"placeholder\", \"Ingrese fecha del Log\", 1, \"form-control\", \"mt-2\"], [\"formControlName\", \"tipoLog\", \"type\", \"text\", \"placeholder\", \"Ingrese tipo de Log\", 1, \"form-control\", \"mt-2\"], [1, \"row\", \"mt-2\", \"text-center\"], [1, \"col-lg-6\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function AddEditLogsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, AddEditLogsComponent_app_progress_bar_0_Template, 1, 0, \"app-progress-bar\", 0);\n      i0.ɵɵtemplate(1, AddEditLogsComponent_div_1_Template, 20, 7, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.ProgressBarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","AddEditLogsComponent","constructor","fb","_logsService","router","toastr","aRouter","_location","formLogs","group","name","required","surname","email","password","idLog","snapshot","paramMap","get","ngOnInit","operacion","getLog","goBack","back","addLog","logs","user","value","fechaLog","tipoLog","loading","updateUser","subscribe","info","navigate","crateLog","data","success","String","_id","console","log","id","patchValue","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\EA\\EA MINIMO1\\BackOfficeEA\\backOffice\\src\\app\\components\\add-edit-logs\\add-edit-logs.component.ts","D:\\EA\\EA MINIMO1\\BackOfficeEA\\backOffice\\src\\app\\components\\add-edit-logs\\add-edit-logs.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ID, Logs } from 'src/app/interfaces/logs';\r\n//import { ListUsersComponent } from '../list-productos/list-productos.component';\r\n\r\nimport { UsersService } from 'src/app/services/users.service';\r\nimport { LogsService } from 'src/app/services/logs.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-logs',\r\n  templateUrl: './add-edit-logs.component.html',\r\n  styleUrls: ['./add-edit-logs.component.css']\r\n})\r\nexport class AddEditLogsComponent {\r\n  formLogs: FormGroup;\r\n  loading: boolean = false;\r\n  idLog: string;\r\n  operacion: string = 'Añadir ';\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private _logsService: LogsService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private aRouter: ActivatedRoute,\r\n    private _location: Location) {\r\n    this.formLogs = this.fb.group({\r\n      //Para poner mas de una validacion hay que ponerlas entre claudators\r\n      name: ['', Validators.required],\r\n      surname: [null, Validators.required],\r\n      email: [null, Validators.required],\r\n      password: [null, Validators.required] \r\n    })\r\n    this.idLog = aRouter.snapshot.paramMap.get(\"idLog\")!;\r\n\r\n  }\r\n  ngOnInit(): void {\r\n    if (this.idLog != null) {\r\n      this.operacion = 'Actualizar ';\r\n      this.getLog(this.idLog);\r\n    }\r\n  }\r\n\r\n  goBack(){\r\n    this._location.back();\r\n  }\r\n\r\n\r\n  addLog() {\r\n    const logs: Logs = {\r\n      user: this.formLogs.value.user,\r\n      fechaLog: this.formLogs.value.fechaLog,\r\n      tipoLog: this.formLogs.value.tipoLog,\r\n\r\n    }\r\n\r\n    this.loading = true;\r\n    if (this.idLog !== null) {\r\n      //Es update\r\n      this._logsService.updateUser(this.idLog, logs).subscribe(() => {\r\n        this.toastr.info(`El log fue actualizado con exito`, 'Log actualizado');\r\n        this.loading = false;\r\n        //if (this.idUser !== null) {\r\n          //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\r\n        //}\r\n        //else{\r\n          //this.router.navigate([`/producto`]);\r\n       // }\r\n       this.router.navigate([`/`]);\r\n       \r\n      })\r\n    } else {\r\n      //Es crear\r\n      this._logsService.crateLog(logs).subscribe((data:Logs) => {\r\n        this.toastr.success(`El log fue agregado con exito`, 'Log agregado')\r\n        this.loading = false;\r\n        this.idLog=String(data._id!);\r\n        console.log(data);\r\n        \r\n        //Es añadir el usuaio al ticket\r\n        //if (this.idTicket !== null) {\r\n          //this._usersService.insertProductoToTicket(this.idTicket,this.idUser).subscribe();\r\n        //}\r\n\r\n        //if (this.idTicket !== null) {\r\n          //this.router.navigate([`/ticket/${this.idTicket}/productos`]);\r\n        //}else{\r\n          //this.router.navigate([`/producto`]);\r\n        //}\r\n        //this.router.navigate([`/`]);\r\n      })\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  getLog(id: string) {\r\n    this.loading = true;\r\n    this._logsService.getLog(id).subscribe((data: Logs) => {\r\n      this.loading = false;\r\n      this.formLogs.patchValue({\r\n        user: data.user,\r\n        fechaLog: data.fechaLog,\r\n        tipoLog: data.tipoLog,\r\n      })\r\n    })\r\n  }\r\n\r\n}\r\n","<app-progress-bar *ngIf=\"loading\"></app-progress-bar>\r\n<div *ngIf=\"!loading\" class=\"row mt-1\">\r\n    <div class=\"col-lg-4 offset-lg-4\">\r\n        <div class=\"card bg-secondary mb-3\" style=\"max-width: 25rem;\">\r\n            <div class=\"card-header text-center\">{{operacion}} log</div>\r\n            <div class=\"card-body\">\r\n                <form [formGroup]=\"formLogs\" (ngSubmit)=\"addLog()\">\r\n                    <input formControlName=\"user\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese user\">\r\n                    <span *ngIf=\"formLogs.get('user')?.hasError('required') && formLogs.get('user')?.touched\">\r\n                        El campo user es <strong>requerido</strong>\r\n                    </span>\r\n                    <input formControlName=\"fechaLog\" type=\"text\" class=\"form-control mt-2\" placeholder=\"Ingrese fecha del Log\">\r\n                    <span *ngIf=\"formLogs.get('fechaLog')?.hasError('required') && formLogs.get('fechaLog')?.touched\">\r\n                        El campo fechaLog es <strong>requerido</strong>\r\n                    </span>\r\n                    <input formControlName=\"tipoLog\" type=\"text\" class=\"form-control mt-2\" placeholder=\"Ingrese tipo de Log\">\r\n                    <span *ngIf=\"formLogs.get('tipoLog')?.hasError('required') && formLogs.get('tipoLog')?.touched\">\r\n                        El campo tipoLog es <strong>requerido</strong>\r\n                    </span>\r\n                \r\n                    <div class=\"row mt-2 text-center\">\r\n                        <div class=\"col-lg-6\">\r\n                            <button (click)=\"goBack()\" type=\"button\" class=\"btn btn-secondary\">Volver</button>\r\n                        </div>\r\n                        <div class=\"col-lg-6\">\r\n                            <button [disabled]=\"formLogs.invalid\" type=\"submit\" class=\"btn btn-primary\">{{operacion}}</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}